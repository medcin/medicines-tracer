/*
require('dotenv').config();

const accountSid = process.env.TWILIO_ACCOUNT_SID;
const authToken = process.env.TWILIO_AUTH_TOKEN;
const mynumber = process.env.MY_NUMBER;
const client = require('twilio')(accountSid, authToken);

let mesg = "hello";
let toNumber = "+966543155333";
const message = client.messages.create({
    body: mesg,
    from: mynumber,
    to: toNumber,
    
})
.then(message=> console.log(message.sid))
.catch(error => console.log(error));
console.log("message sent");*/


/*
import twilio from "twilio";

const accountSid = process.env.TWILIO_ACCOUNT_SID;
const authToken = process.env.TWILIO_AUTH_TOKEN;

const client = twilio(accountSid, authToken);
*/
/*

import dotenv from 'dotenv';
import twilio from 'twilio';
import crypto from 'crypto';
*/
/*
require('dotenv').config();

const accountSid = process.env.TWILIO_ACCOUNT_SID;
const authToken = process.env.TWILIO_AUTH_TOKEN;
const mynumber = process.env.MY_NUMBER;
const client = require('twilio')(accountSid, authToken);

let mesg = "hello maha";
let toNumber = "+966543155333";
const message = client.messages.create({
    body: mesg,
    from: mynumber,
    to: toNumber,
    
})
.then(message=> console.log(message.sid))
.catch(error => console.log(error));
console.log("message sent");*/

/*
let mesg = "hello";
let toNumber = "+966543155333";
const message = client.messages.create({
    body: mesg,
    from: "medicine-tracer",
    to: toNumber,
    
})
.then(message=> console.log(message.sid))
.catch(error => console.log(error));
console.log("message sent");

*/






/*
class MsgHandelr{
    constructor(){
        this._accountSid = process.env.TWILIO_ACCOUNT_SID;
        this._authToken = process.env.TWILIO_AUTH_TOKEN;
        this._mynumber = process.env.MY_NUMBER;
        this._client = require('twilio')(this._accountSid, this._authToken);

        // make sendMsg a read-only property
        Object.defgineProperty(this, 'sendMsg', {
            set: function(message, toNumber){
                this._sendMsg(message, toNumber);},
            value: this._sendMsg.bind(this),
            writable: false,
            configurable: false,
            
        });
    }

    _sendMsg(mesg, toNumber){
        const message = this._client.messages.create({
            body: mesg,
            from: this._mynumber,
            to: toNumber,
            
        })
        .then(message=> console.log(message.sid))
        .catch(error => console.log(error));
        console.log("message sent");
    }
}
*/




/*class OTP {
    constructor(phoneNumber) {
        this._phoneNumber = phoneNumber;
        this._client = require('twilio')(accountSid, authToken);
    }

    sendOTP() {
        this._client.verify.services.create({friendlyName: 'My medicine-tracer'})
        .then(service => {
          console.log(service.sid); // Output: the Verify service ID

          // Send an OTP via SMS
            return this._client.verify.services(service.sid)
            .verifications
            .create({to: this._phoneNumber, channel: 'sms', from: "medicine-tracer"});
        })
        .then(verification => {
          console.log(verification.status); // Output: "pending"
          console.log(verification.sid); // Output: the verification ID
        })
        .catch(error => {
            console.log(error);
        });
    }
}

  // Example usage:
const otp = new OTP("+966543155333");
otp.sendOTP();*/